{"version":3,"file":"duna.js","sources":["../src/utils.ts","../src/dom.ts","../src/http.ts","../src/ui/ControlBase.ts","../src/ui/NumericBox.ts","../src/ui/SearchBox.ts","../src/ui/Limiter.ts","../src/ui/MaskEdit.ts","../src/index.ts","../src/base.ts"],"sourcesContent":["import { Converter } from \"./base\";\r\n\r\nexport function merge(target: any, ...sources: any[]): any {\r\n    sources.forEach(source => {\r\n        for (let p in source || {}) {\r\n            if (source.hasOwnProperty(p) && isDefined(source[p])) {\r\n                if (source[p].constructor === Object) {\r\n                    target[p] = target[p] || {};\r\n                    merge(target[p], source[p]);\r\n                } else {\r\n                    target[p] = source[p];\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return target;\r\n}\r\n\r\nexport function isDefined(value: any): boolean {\r\n    return value !== undefined && value !== null;\r\n}\r\n\r\nexport function isJsonLike(value: string): boolean {\r\n    let start = /^\\[|^\\{(?!\\{)/;\r\n    let ends: { [key: string]: RegExp } = { '[': /]$/, '{': /}$/ };\r\n    let m = value.match(start);\r\n    return !!m && ends[m[0]].test(value);\r\n}\r\n\r\nexport function isFunction(value: any): value is Function {\r\n    return typeof value === \"function\"\r\n};\r\n\r\nexport function isString(value: any): value is string {\r\n    return typeof value === \"string\";\r\n}\r\n\r\n/**\r\n * Determines whether a reference is an object.\r\n * Unlike the `typeof` in javascript, `null` values are not considered objects.\r\n * @param value \r\n */\r\nexport function isObject(value: any): value is object {\r\n    return value !== null && typeof value === \"object\";\r\n}\r\n\r\n/**\r\n * Determines whether a reference is a valid number.\r\n *\r\n * Unlike the `typeof` in JavaScript, the special numeric values `NaN`, `Inifity` and `-Infinity` are not considered as valid numbers.\r\n * @param value Reference to check.\r\n */\r\nexport function isNumber(value: any): value is number {\r\n    return typeof value === \"number\" && !isNaN(value) && isFinite(value);\r\n}\r\n\r\nexport function template(format: string, data: any, prefix = '${', suffix = '}'): string {\r\n    let regex = new RegExp(`\\\\${prefix}([^(\\\\${suffix})]+)\\\\${suffix}`, 'g');\r\n    let result = format.toString().replace(regex, (expr, key) => {\r\n        return isDefined(data[key]) ? data[key] : '';\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport function toQuery(obj: any, keyEncoding: Converter<string, any> = (v) => encodeURIComponent(v), valueEncoding: Converter<string, any> = (v) => encodeURIComponent(v)): string {\r\n\r\n    let query: string[] = [];\r\n    for (let p in obj) {\r\n        if (obj.hasOwnProperty(p)) {\r\n            if (Array.isArray(obj[p])) {\r\n                (obj[p] as any[]).forEach(item => {\r\n                    query.push(`${keyEncoding(p)}=${valueEncoding(item)}`);\r\n                });\r\n            } else {\r\n                query.push(`${keyEncoding(p)}=${valueEncoding(obj[p])}`);\r\n            }\r\n        }\r\n    }\r\n    return query.join(\"&\");\r\n}\r\n\r\nexport function fromQuery(query: string, keyEncoding: Converter<string, any> = (v) => decodeURIComponent(v).toLowerCase(), valueEncoding: Converter<string, any> = (v) => decodeURIComponent(v)): any {\r\n    if (!query)\r\n        return null;\r\n\r\n    return query.split('&').reduce((previous, current) => {\r\n        let item = current.split('=');\r\n        let key = keyEncoding(item[0]);\r\n        let value = valueEncoding(item[1]);\r\n        if (previous[key]) {\r\n            if (!Array.isArray(previous[key]))\r\n                previous[key] = [previous[key]];\r\n\r\n            previous[key].push(value);\r\n        } else {\r\n            previous[key] = value;\r\n        }\r\n        return previous;\r\n    }, {} as { [key: string]: any });\r\n}\r\n\r\nexport function titleCase(value: string): string {\r\n    return value.replace(/(\\w+)/g, v => v[0].toUpperCase() + v.slice(1).toLowerCase());\r\n}\r\n\r\nexport function noDiacritics(value: string): string {\r\n    if (!isString(value))\r\n        return value;\r\n\r\n    let patterns: { [key: string]: RegExp } = {\r\n        'A': /[\\300-\\306]/g,\r\n        'a': /[\\340-\\346]/g,\r\n        'E': /[\\310-\\313]/g,\r\n        'e': /[\\350-\\353]/g,\r\n        'I': /[\\314-\\317]/g,\r\n        'i': /[\\354-\\357]/g,\r\n        'O': /[\\322-\\330]/g,\r\n        'o': /[\\362-\\370]/g,\r\n        'U': /[\\331-\\334]/g,\r\n        'u': /[\\371-\\374]/g,\r\n        'N': /[\\321]/g,\r\n        'n': /[\\361]/g,\r\n        'C': /[\\307]/g,\r\n        'c': /[\\347]/g\r\n    }\r\n\r\n    for (let key in patterns)\r\n        value = value.replace(patterns[key], key);\r\n\r\n    return value;\r\n}","import { ElementDimension } from './base';\r\n\r\nexport function getSize(element: HTMLElement): ElementDimension {\r\n    let hidden = /none/i.test(element.style.display || '');\r\n    if (hidden)\r\n        element.style.display = null;\r\n\r\n    let result = <ElementDimension>{ width: element.offsetWidth, height: element.offsetHeight };\r\n    if (hidden)\r\n        element.style.display = \"none\";\r\n\r\n    return result;\r\n}\r\n\r\nexport function isVisible(element: HTMLElement): boolean {\r\n    return element.offsetWidth > 0 && element.offsetHeight > 0;\r\n}\r\n\r\nexport function addClass(element: Element, className: string) {\r\n    if (!className)\r\n        return;\r\n\r\n    let classes = element.className.split(' ')\r\n        .concat(className.split(' '))\r\n        .reduce((previous, current) => {\r\n            if (previous.indexOf(current) === -1)\r\n                previous.push(current);\r\n            return previous;\r\n        }, ([] as string[]));\r\n\r\n    element.className = classes.filter(name => name).join(' ');\r\n}\r\n\r\nexport function removeClass(element: Element, className: string) {\r\n    if (!className)\r\n        return;\r\n\r\n    let names = className.split(' ');\r\n    let classes = element.className.split(' ').filter(name => names.indexOf(name) === -1);\r\n    if (!classes.length)\r\n        element.removeAttribute(\"class\");\r\n    else\r\n        element.className = classes.filter(name => name).join(' ');\r\n}\r\n\r\nexport function setStyle(element: HTMLElement, styles: { [key: string]: string | number }) {\r\n    for (let name in styles)\r\n        (element.style as any)[name] = styles[name];\r\n}\r\n\r\nexport function getStyle(element: Element, name: string): string {\r\n    return document.defaultView.getComputedStyle(element).getPropertyValue(name);\r\n}\r\n\r\nexport function removeChildren(element: Element) {\r\n    while (element.lastChild)\r\n        element.removeChild(element.lastChild);\r\n}","import * as utils from './utils';\r\n\r\ntype ResponseConverter = (xhr: XMLHttpRequest, options: HttpOptions) => any;\r\n\r\ninterface HttpOptions {\r\n    user?: string;\r\n    password?: string;\r\n    headers?: { [key: string]: string },\r\n    data?: any;\r\n    responseConverter?: ResponseConverter;\r\n    json?: boolean;\r\n    crossDomain?: boolean;\r\n    withCredentials?: boolean;\r\n}\r\n\r\ninterface HttpResponse {\r\n    data: any\r\n    options: HttpOptions,\r\n    status: number,\r\n    statusText: string,\r\n    contentType: string | null;\r\n}\r\n\r\nfunction getHeaders(options: HttpOptions): { [key: string]: any } {\r\n    const defaultHeaders: { [key: string]: string } = {\r\n        \"Accept\": \"text/plain, text/javascript, application/json, application/xml, */*\",\r\n        \"Content-Type\": options.json\r\n            ? \"application/json; charset=UTF-8\"\r\n            : \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n    }\r\n\r\n    let normalizedHeaders: { [key: string]: any } = {};\r\n    let headers = options.headers || {};\r\n    for (var p in headers)\r\n        normalizedHeaders[utils.titleCase(p)] = headers[p];\r\n\r\n    if (!options.crossDomain || !defaultHeaders[\"X-Requested-With\"])\r\n        defaultHeaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\r\n\r\n    return Object.assign({}, defaultHeaders, normalizedHeaders);\r\n}\r\n\r\nfunction getResponseConverter(optionsResponseConverter?: ResponseConverter): ResponseConverter {\r\n    if (optionsResponseConverter && utils.isFunction(optionsResponseConverter))\r\n        return optionsResponseConverter;\r\n\r\n    return (xhr: XMLHttpRequest, options: HttpOptions) => {\r\n        let responseHeader = xhr.getResponseHeader(\"Content-Type\") || '';\r\n\r\n        if (responseHeader.indexOf(\"application/json\") > -1 || utils.isJsonLike(xhr.responseText))\r\n            return JSON.parse(xhr.response);\r\n\r\n        return responseHeader.toLowerCase() === \"text/xml\"\r\n            ? xhr.responseXML\r\n            : xhr.responseText;\r\n    }\r\n}\r\n\r\nfunction startRequest(method: string, url: string, options: HttpOptions): PromiseLike<HttpResponse> {\r\n    return new Promise((done, error) => {\r\n        let xhr = new XMLHttpRequest();\r\n        if (options.withCredentials)\r\n            xhr.withCredentials = options.withCredentials;\r\n\r\n        xhr.open(method, url, true, options.user, options.password);\r\n        let headers = options.headers || {};\r\n        for (var p in headers)\r\n            xhr.setRequestHeader(p, headers[p]);\r\n\r\n        xhr.onload = () => {\r\n            let response: HttpResponse = {\r\n                data: getResponseConverter(options.responseConverter)(xhr, options),\r\n                contentType: xhr.getResponseHeader(\"Content-Type\"),\r\n                options,\r\n                status: xhr.status,\r\n                statusText: xhr.statusText\r\n            };\r\n\r\n            if (xhr.status >= 200 && xhr.status < 300)\r\n                done(response);\r\n            else\r\n                error(response);\r\n        }\r\n\r\n        let data = options.data;\r\n        if (utils.isObject(data))\r\n            data = JSON.stringify(data);\r\n\r\n        xhr.send(data);\r\n    });\r\n}\r\n\r\nexport function init(method: string, url: string, options: HttpOptions): PromiseLike<HttpResponse> {\r\n    let headers = getHeaders(options);\r\n\r\n    if (method.toLowerCase() === \"get\" && (headers[\"Content-Type\"] || '').indexOf(\"application/json\") === 0) {\r\n        let index = url.indexOf(\"?\");\r\n        let query = utils.fromQuery(url.slice(index + 1));\r\n        if (query) {\r\n            let jsonValue = utils.toQuery(query, encodeURIComponent, JSON.stringify);\r\n            url = `${url.slice(0, index)}${jsonValue}`;\r\n        }\r\n\r\n        options.headers = headers;\r\n    }\r\n\r\n    return startRequest(method, url, options);\r\n}\r\n\r\nexport function get(url: string, options?: HttpOptions) {\r\n    return init(\"get\", url, options || {});\r\n}\r\n\r\nexport function post(url: string, data: any, options?: HttpOptions) {\r\n    return init(\"post\", url, Object.assign({}, options, { data }));\r\n}","import { Callback } from \"../base\";\r\n\r\nconst DUNA_PROPERTY = \"$duna\";\r\n\r\ninterface HTMLElement {\r\n    [key: string]: any;\r\n}\r\n\r\ntype ControlEventObject = {\r\n    type: string;\r\n    handler: Function;\r\n    element: HTMLElement;\r\n}\r\n\r\nexport interface ControlOptions {\r\n    onReady?: Callback<ControlBase>;\r\n}\r\n\r\nabstract class ControlBase {\r\n    _eventsCollection: ControlEventObject[];\r\n\r\n    protected $element: HTMLElement;\r\n    protected $options: ControlOptions;\r\n    protected $guid: string;\r\n\r\n    constructor(element: HTMLElement, options: ControlOptions) {\r\n        this.$element = element;\r\n        this.$options = options;\r\n        this.$guid = `dn${Math.random().toString(36).substr(2)}`;\r\n        this._eventsCollection = [];\r\n\r\n        this.$initialize();\r\n        this.$invoke(this.$options.onReady, this);\r\n        this.$registerControl();\r\n    }\r\n\r\n    dispose() {\r\n        console.log(`duna: ${this.constructor.name} #${this.$guid} was disposed`);\r\n\r\n        this._eventsCollection.forEach(e => e.element.removeEventListener(e.type, e.handler, false));\r\n        this._eventsCollection = [];\r\n        for (let prop in this)\r\n            delete this[prop];\r\n    }\r\n\r\n    private _ensureUniqueInstancePerType() {\r\n        let index = (this.$element[DUNA_PROPERTY] as any[]).findIndex(p =>\r\n            p.constructor.name === this.constructor.name &&\r\n            p.constructor.prototype === this.constructor.prototype\r\n        );\r\n\r\n        if (index === -1)\r\n            return;\r\n\r\n        let instance = this.$element[DUNA_PROPERTY][index];\r\n        this.$element[DUNA_PROPERTY].splice(index, 1);\r\n        instance.dispose();\r\n    }\r\n\r\n    protected abstract $initialize(): void;\r\n\r\n    $registerControl() {\r\n        if (!Array.isArray(this.$element.hasOwnProperty(DUNA_PROPERTY)))\r\n            this.$element[DUNA_PROPERTY] = [];\r\n\r\n        this._ensureUniqueInstancePerType();\r\n        this.$element[DUNA_PROPERTY].push(this);\r\n    }\r\n\r\n    $invoke(callback: Function | undefined, ...args: any[]): any {\r\n        return typeof callback === \"function\" ? callback.apply(this, args) : undefined;\r\n    }\r\n\r\n    $addEvent(type: string, handler: Function, element?: HTMLElement): void {\r\n        handler = handler.bind(this);\r\n        element = element || this.$element;\r\n\r\n        this._eventsCollection.push({ type, handler, element });\r\n        element.addEventListener(type, handler, false);\r\n    }\r\n\r\n    $removeEvent(type: string, handler: Function, element?: HTMLElement): void {\r\n        handler = handler.bind(this);\r\n        element = element || this.$element;\r\n\r\n        let events = this._eventsCollection.filter(p => p.element === element && p.type === type);\r\n        events.forEach(e => {\r\n            let index = this._eventsCollection.indexOf(e);\r\n            this._eventsCollection.splice(index, 1);\r\n            e.element.removeEventListener(type, handler, false);\r\n        });\r\n    }\r\n}\r\n\r\nexport default ControlBase;","import * as utils from '../utils';\r\nimport ControlBase, { ControlOptions } from './ControlBase';\r\nimport { CallbackArgs } from '../base';\r\nimport { isNumber } from '../utils';\r\n\r\nexport interface NumericBoxOptions extends ControlOptions {\r\n    scale?: number;\r\n    decimalSeparator?: string;\r\n    groupingSeparator?: string;\r\n    format?: string | string[];\r\n    placeholder?: string;\r\n    nullable?: boolean;\r\n    min?: number;\r\n    max?: number;\r\n    onChange?: CallbackArgs<NumericBox, { value: number, inputValue: number }>;\r\n    onFormat?: CallbackArgs<NumericBox, { value: number, text: string }>;\r\n}\r\n\r\nclass NumericBox extends ControlBase {\r\n\r\n    $element!: HTMLInputElement;\r\n    $options!: NumericBoxOptions;\r\n    private _dataFormat!: string[];\r\n\r\n    constructor(element: HTMLInputElement, options: NumericBoxOptions) {\r\n\r\n        let defaultOptions: NumericBoxOptions = {\r\n            scale: 0,\r\n            decimalSeparator: '.',\r\n            groupingSeparator: ',',\r\n            format: ['-n', 'n', 'n'],\r\n            placeholder: 'n',\r\n            nullable: false\r\n        }\r\n\r\n        super(element, utils.merge(defaultOptions, options));\r\n    }\r\n\r\n    $initialize(): void {\r\n        this._normalizeFormat();\r\n        this._registerEvents();\r\n        this.format();\r\n    }\r\n\r\n    format() {\r\n        let text = this.getRawValue() || \"\";\r\n        let o = this.$options;\r\n\r\n        let ev = { value: 0, text: \"\" };\r\n\r\n        if (!text && o.nullable) {\r\n            this.$invoke(o.onFormat, this, ev);\r\n            return;\r\n        }\r\n\r\n        text = text.replace(o.decimalSeparator || '', \".\");\r\n\r\n        let n = parseFloat(text);\r\n        if (!utils.isNumber(n))\r\n            n = 0;\r\n\r\n        n = this._ensureRange(n, o.min, o.max);\r\n\r\n        let scale = utils.isNumber(o.scale) ? o.scale : 0;\r\n        let ns = n.toFixed(scale);\r\n\r\n        text = ns.replace(\".\", o.decimalSeparator || '');\r\n        if (scale > 0) {\r\n            let expr = new RegExp(`(\\\\d)(\\\\d{3}([\\\\${o.groupingSeparator}\\\\${o.decimalSeparator}]))`);\r\n            while (expr.test(text))\r\n                text = text.replace(expr, `$1${o.groupingSeparator}$2`);\r\n        }\r\n\r\n        let formatted = \"\";\r\n        let f = this._dataFormat;\r\n        let placeholder = o.placeholder || '';\r\n\r\n        if (n === 0)\r\n            formatted = f[2].replace(placeholder, text);\r\n        else {\r\n            formatted = (n > 0)\r\n                ? (f[1]).replace(placeholder, text)\r\n                : f[0].replace(placeholder, text.replace('-', ''));\r\n        }\r\n\r\n        ev.value = parseFloat(ns);\r\n        ev.text = formatted;\r\n        this.$invoke(o.onFormat, this, ev);\r\n        this.$element.value = formatted;\r\n    }\r\n\r\n    getRawValue() {\r\n        let value = this.$element.value;\r\n        if (!value)\r\n            return \"\";\r\n\r\n        let matches = value.match(/[-\\d]+/g);\r\n        if (!matches || !matches.length)\r\n            return \"\";\r\n\r\n        if (value[0] === ',' || value[0] === '.')\r\n            matches.unshift('0');\r\n\r\n        let len = matches.length;\r\n        if (len === 1)\r\n            return parseFloat(matches[0]).toString();\r\n\r\n        let result = \"\";\r\n        let separator = (this.$options.scale as number) > 0 ? \".\" : \"\";\r\n        while (--len > -1) {\r\n            result = separator + matches[len] + result;\r\n            separator = \"\";\r\n        }\r\n\r\n        if (!result)\r\n            return result;\r\n\r\n        return parseFloat(result).toFixed(this.$options.scale);\r\n    }\r\n\r\n    private _normalizeFormat(): void {\r\n        let format = this.$options.format;\r\n        if (utils.isString(format)) {\r\n            format = ['-' + format, <string>format, <string>format];\r\n        }\r\n        else if (Array.isArray(format) && format.length === 2)\r\n            format.push(format[1]);\r\n\r\n        this._dataFormat = format as string[];\r\n    }\r\n\r\n    private _registerEvents(): void {\r\n        this.$addEvent(\"focus\", this._onFocusEvent);\r\n        this.$addEvent(\"click\", this._onFocusEvent);\r\n        this.$addEvent(\"keydown\", this._onKeyDownEvent);\r\n        this.$addEvent(\"change\", this._onChangeEvent);\r\n        this.$addEvent(\"blur\", this.format);\r\n    }\r\n\r\n    private _onKeyDownEvent(e: KeyboardEvent): void {\r\n        let el = this.$element;\r\n\r\n        if (e.key === \"Enter\") {\r\n            el.blur();\r\n            return;\r\n        }\r\n\r\n        if (e.key.length > 1)\r\n            return;\r\n\r\n        if ((/[0-9]/.test(e.key) && !e.shiftKey))\r\n            return;\r\n\r\n        let negSign = (e.key === \"-\");\r\n        if (negSign && (!el.value || (el.selectionStart === 0 || document.getSelection().toString() === el.value)))\r\n            return;\r\n\r\n        let scale = this.$options.scale as number;\r\n        if (/[.,]/.test(e.key) && utils.isNumber(scale) && scale > 0 && (!/[.,]/g.test(el.value) || document.getSelection().toString() === el.value))\r\n            return;\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    private _onFocusEvent(e: FocusEvent): void {\r\n        let el = this.$element;\r\n        if (!this.$options.nullable && !el.value)\r\n            this.format();\r\n\r\n        if (!el.hasAttribute(\"readonly\"))\r\n            el.value = this.getRawValue();\r\n\r\n        el.select();\r\n        e.preventDefault();\r\n    }\r\n\r\n    private _onChangeEvent(e: Event): void {\r\n        let o = this.$options;\r\n        let inputValue = parseFloat(this.getRawValue());\r\n        let value = this._ensureRange(inputValue, o.min, o.max);\r\n        this.$invoke(this.$options.onChange, this, { value, inputValue });\r\n    }\r\n\r\n    private _ensureRange(n: number, min: number | undefined, max: number | undefined): number {\r\n        let hasMin = utils.isNumber(min);\r\n        let hasMax = utils.isNumber(max);\r\n\r\n        if (hasMin && hasMax && <Number>min >= <Number>max)\r\n            throw new RangeError(\"min must have a lesser value than max\");\r\n\r\n        if (hasMin && n < <Number>min)\r\n            return min as number;\r\n\r\n        if (hasMax && n > <Number>max)\r\n            return max as number;\r\n\r\n        return n;\r\n    }\r\n\r\n    static from(selector: string, options: NumericBoxOptions): NumericBox[] {\r\n        return [...document.querySelectorAll(selector)].map(element => new NumericBox(<HTMLInputElement>element, options));\r\n    }\r\n}\r\n\r\nexport default NumericBox;","import * as utils from '../utils';\r\nimport * as dom from '../dom';\r\nimport * as http from '../http';\r\nimport ControlBase, { ControlOptions } from './ControlBase';\r\nimport { CallbackArgs, Callback } from '../base';\r\n\r\nexport interface SearchBoxOptions extends ControlOptions {\r\n    template: string;\r\n    activeItemClass?: string;\r\n    delay?: number;\r\n    source?: string | any[] | { (value: string): PromiseLike<any> };\r\n    matchesTemplate?: string;\r\n    fieldTemplate?: string;\r\n    maxResults?: number;\r\n    minLength?: number;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    dataRoot?: string;\r\n    noRecordsTemplate?: string;\r\n    searchFields?: string[];\r\n    onBeforeRequest?: Callback<SearchBox>;\r\n    onAfterRequest?: CallbackArgs<SearchBox, { container: HTMLElement, data: any[] }>;\r\n    onResultsRender?: CallbackArgs<SearchBox, { container: HTMLElement }>;\r\n    onItemSelected?: CallbackArgs<SearchBox, { data: any, text: string }>;\r\n    onActiveItem?: CallbackArgs<SearchBox, { data: any, text: string }>;\r\n    root?: string;\r\n}\r\n\r\ninterface DataFilterObject {\r\n    dataSource: any[],\r\n    fields: string[],\r\n    search: string\r\n}\r\n\r\nconst SEARCH_BOX_DATA_VALUE = \"dunaSearchBoxDataValue\";\r\nclass SearchBox extends ControlBase {\r\n    private _sourceHandler!: (source: any) => void;\r\n    private _timer!: number | null;\r\n    private _searchFields!: string[];\r\n    private _dataFilter!: (filter: any) => any;\r\n    private _noRecords!: boolean;\r\n    private _itemTemplate!: string;\r\n    private _containerBody!: HTMLElement;\r\n    private _container!: HTMLElement;\r\n    private _root!: Element | null;\r\n\r\n    $element!: HTMLInputElement;\r\n    $options!: SearchBoxOptions;\r\n\r\n    constructor(element: HTMLInputElement, options: SearchBoxOptions) {\r\n\r\n        if (!options)\r\n            throw new Error(\"SearchBox.options is required.\");\r\n\r\n        if (!options.template)\r\n            throw new Error(\"SearchBox.options.template is required.\");\r\n\r\n        if (!options.source)\r\n            throw new Error(\"SearchBox.source is required.\");\r\n\r\n        const defaultOptions: SearchBoxOptions = {\r\n            template: '',\r\n            activeItemClass: \"active\",\r\n            delay: 500,\r\n            source: [],\r\n            matchesTemplate: \"<mark>${0}</mark>\",\r\n            fieldTemplate: \"${0}\",\r\n            maxResults: 10,\r\n            minLength: 2,\r\n            offsetX: 0,\r\n            offsetY: 2,\r\n            dataRoot: \"data\",\r\n            noRecordsTemplate: \"<div>No records found</div>\",\r\n            searchFields: []\r\n        }\r\n\r\n        super(element, utils.merge(defaultOptions, options));\r\n    }\r\n\r\n    $initialize() {\r\n        this._setRoot();\r\n        this._createTemplate();\r\n        this._defineSourceHandler();\r\n        this._registerEvents();\r\n    }\r\n\r\n    private _setRoot() {\r\n        if (this.$options.root)\r\n            this._root = document.querySelector(this.$options.root);\r\n    }\r\n\r\n    private _createTemplate() {\r\n        let template = this.$options.template;\r\n        this.$element.insertAdjacentHTML(\"afterend\", template);\r\n\r\n        let container = this.$element.nextElementSibling as HTMLElement;\r\n        let zIndex = parseInt(dom.getStyle(container, \"z-index\"), 10);\r\n        if (isNaN(zIndex))\r\n            zIndex = 9999;\r\n\r\n        dom.setStyle(container, {\r\n            display: \"none\",\r\n            position: \"fixed\",\r\n            margin: 0,\r\n            overflowY: \"auto\",\r\n            height: \"auto\",\r\n            zIndex\r\n        });\r\n\r\n        let item = container.querySelector(\"[dn-item]\");\r\n        if (!item)\r\n            throw new Error(\"The container template must also have a child element with 'dn-item' attribute on it\")\r\n\r\n        this._container = container;\r\n        this._containerBody = item.parentElement as HTMLElement;\r\n        this._itemTemplate = item.outerHTML;\r\n    }\r\n\r\n    private _renderNoRecords() {\r\n        this._noRecords = true;\r\n        this._resetContainerBody();\r\n        if (this.$options.noRecordsTemplate) {\r\n            this._containerBody.insertAdjacentHTML(\"beforeend\", this.$options.noRecordsTemplate);\r\n            this._container.style.display = \"\";\r\n            this._updateContainerStyle();\r\n        }\r\n        else\r\n            this._containerBody.style.display = \"none\";\r\n    }\r\n\r\n    private _staticSourceHandler(dataSource: any[]) {\r\n        let value = this.$element.value;\r\n        if (!value.length)\r\n            return;\r\n\r\n        if (dataSource.length) {\r\n            this._defineDataFilter(dataSource);\r\n            let items = this._dataFilter({\r\n                dataSource,\r\n                fields: this._searchFields,\r\n                search: value.replace(/\\\\/g, '\\\\\\\\')\r\n            });\r\n\r\n            if (!items.length) {\r\n                this._renderNoRecords();\r\n                return;\r\n            }\r\n\r\n            this._noRecords = false;\r\n            this._render(items, value);\r\n            return;\r\n        }\r\n\r\n        this._renderNoRecords();\r\n    }\r\n\r\n    private _readData(data: any) {\r\n        let root = this.$options.dataRoot;\r\n        if (!root)\r\n            return data;\r\n\r\n        root.split('.').forEach(property => {\r\n            if (data.hasOwnProperty(property))\r\n                data = data[property];\r\n            return data;\r\n        });\r\n\r\n        return data;\r\n    }\r\n\r\n    private _httpSourceHandler(url: string) {\r\n        let value = this.$element.value.trim();\r\n        if (!value.length)\r\n            return;\r\n\r\n        url = url.replace(\"${query}\", encodeURIComponent(value));\r\n        this._promiseSourceHandler(() => {\r\n            return http.get(url);\r\n        });\r\n    }\r\n\r\n    private _promiseSourceHandler(promise: (value: string) => PromiseLike<any>) {\r\n        window.clearTimeout(this._timer as number);\r\n        this._timer = window.setTimeout(() => {\r\n            this.$invoke(this.$options.onBeforeRequest, this);\r\n            promise(encodeURIComponent(this.$element.value)).then(response => {\r\n                let data = this._readData(response);\r\n                if (!data || !Array.isArray(data))\r\n                    throw new Error(\"The data source is invalid. Check if the options.dataRoot is correct.\")\r\n                this.$invoke(this.$options.onAfterRequest, this, { container: this._container, data });\r\n                this._staticSourceHandler(data);\r\n            }, error => console.error(error));\r\n        }, this.$options.delay);\r\n    }\r\n\r\n    private _normalizeValue(value: any): string {\r\n        if (!utils.isDefined(value))\r\n            return '';\r\n\r\n        if (!utils.isString(value))\r\n            value = value.toString().trim();\r\n\r\n        return value;\r\n    }\r\n\r\n    private _resetContainerBody() {\r\n        Array.from(this._containerBody.children).forEach(child => {\r\n            this.$removeEvent(\"mouseenter\", this._onItemMouseEnterEvent, child);\r\n            this.$removeEvent(\"click\", this._onItemClick, child);\r\n        })\r\n\r\n        dom.removeChildren(this._containerBody);\r\n    }\r\n\r\n    private _render(dataSource: any[], value: string) {\r\n        this._resetContainerBody();\r\n\r\n        let options = this.$options;\r\n        let len = Math.min(dataSource.length, options.maxResults as number);\r\n        let rawValue = utils.noDiacritics(value);\r\n        let expr = new RegExp(rawValue, 'gi');\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            let item = Object.assign({}, dataSource[i]);\r\n            let content = this._itemTemplate;\r\n\r\n            this._searchFields.forEach(field => {\r\n                let fieldValue = this._normalizeValue(item[field]);\r\n                if (!fieldValue)\r\n                    return;\r\n\r\n                let result = fieldValue.split('');\r\n                utils.noDiacritics(fieldValue).replace(expr, (match, index) => {\r\n                    let matchesTemplate = (options.matchesTemplate as string).replace(\"${0}\", fieldValue.substr(index, match.length));\r\n                    let strIndex = index + match.length - 1;\r\n                    while (strIndex > index)\r\n                        result.splice(strIndex--, 1);\r\n                    result.splice(index, 1, matchesTemplate);\r\n                    return '';\r\n                });\r\n\r\n                content = content.replace(new RegExp(`\\\\\\${${field}\\\\}`, 'g'), result.join(''));\r\n            });\r\n\r\n            content = utils.template(content, item);\r\n            this._containerBody.insertAdjacentHTML(\"beforeend\", content);\r\n            (this._containerBody.lastElementChild as any)[SEARCH_BOX_DATA_VALUE] = dataSource[i];\r\n        }\r\n\r\n        [...this._containerBody.querySelectorAll(\"img[dn-src]\")].forEach(img => {\r\n            let value = img.getAttribute(\"dn-src\");\r\n            if (value && value.length > 0)\r\n                (img as HTMLImageElement).src = value;\r\n        });\r\n\r\n        this._container.style.display = len ? \"block\" : \"none\";\r\n        this._updateContainerStyle();\r\n        this._registerContainerEvents();\r\n\r\n        this.$invoke(this.$options.onResultsRender, this, { container: this._container });\r\n    }\r\n\r\n    private _defineDataFilter(dataSource: any[]) {\r\n        if (this._dataFilter)\r\n            return;\r\n\r\n        if (utils.isString(dataSource[0])) {\r\n            this._dataFilter = this._stringDataFilter;\r\n            this._searchFields = [\"0\"];\r\n        } else {\r\n            this._dataFilter = this._objectDataFilter;\r\n            let fields = this.$options.searchFields;\r\n            if (!Array.isArray(fields) || !fields.length)\r\n                fields = Object.keys(dataSource[0]);\r\n            this._searchFields = fields;\r\n        }\r\n    }\r\n\r\n    private _stringDataFilter(filter: DataFilterObject) {\r\n        return this._objectDataFilter(Object.assign(filter, {\r\n            dataSource: filter.dataSource.map(p => { return { 0: p } })\r\n        }));\r\n    }\r\n\r\n    private _objectDataFilter(filter: DataFilterObject) {\r\n        let value = utils.noDiacritics(filter.search);\r\n        let expr = new RegExp(value, 'i');\r\n        let fields = filter.fields;\r\n        let len = fields.length;\r\n        return filter.dataSource.reduce((previous, current) => {\r\n            for (let i = 0; i < len; i++) {\r\n                let raw = utils.noDiacritics(current[fields[i]]);\r\n                if (expr.test(raw)) {\r\n                    previous.push(current);\r\n                    break;\r\n                }\r\n            }\r\n            return previous;\r\n        }, []);\r\n    }\r\n\r\n    private _defineSourceHandler() {\r\n        if (Array.isArray(this.$options.source)) {\r\n            this._sourceHandler = this._staticSourceHandler;\r\n        } else if (utils.isString(this.$options.source)) {\r\n            this._sourceHandler = this._httpSourceHandler;\r\n        } else {\r\n            this._sourceHandler = this._promiseSourceHandler;\r\n        }\r\n    }\r\n\r\n    private _selectItem(item: HTMLElement) {\r\n        this._resetContainerBody();\r\n        let data = (item as any)[SEARCH_BOX_DATA_VALUE];\r\n        let field = utils.template(this.$options.fieldTemplate as string, data);\r\n        this.$element.value = field;\r\n        this.$invoke(this.$options.onItemSelected, this, {\r\n            data,\r\n            text: item.innerText.trim()\r\n        });\r\n        this.$element.dispatchEvent(new Event(\"input\", { bubbles: true }));\r\n        this._container.style.display = \"none\";\r\n    }\r\n\r\n    private _registerEvents() {\r\n        this.$addEvent(\"keydown\", this._onKeyDownEvent);\r\n        this.$addEvent(\"input\", this._onInputEvent);\r\n        this.$addEvent(\"blur\", this._onBlurEvent);\r\n        this.$addEvent(\"scroll\", this._onWindowScrollOrResize, window);\r\n        this.$addEvent(\"resize\", this._onWindowScrollOrResize, window);\r\n    }\r\n\r\n    private _keyboardNavigate(e: KeyboardEvent) {\r\n        let isGoingDown = e.key === \"ArrowDown\";\r\n        if (!isGoingDown && e.key !== \"ArrowUp\")\r\n            return;\r\n\r\n        let active = this.$options.activeItemClass as string;\r\n        let item = this._containerBody.querySelector('.' + active) as any;\r\n        let action = isGoingDown ? [\"firstElementChild\", \"nextElementSibling\"] : [\"lastElementChild\", \"previousElementSibling\"];\r\n\r\n        if (item) {\r\n            dom.removeClass(item, active);\r\n            item = item[action[1]];\r\n        }\r\n\r\n        if (!item)\r\n            item = (this._containerBody as any)[action[0]];\r\n\r\n        dom.addClass(item, active);\r\n        let data = item[SEARCH_BOX_DATA_VALUE];\r\n        this.$invoke(this.$options.onActiveItem, this, {\r\n            data,\r\n            text: item.innerText.trim()\r\n        });\r\n\r\n        this._updateContainerScrollPosition(item, isGoingDown);\r\n    }\r\n\r\n    private _updateContainerScrollPosition(item: HTMLElement, isGoingDown: boolean) {\r\n        let body = this._containerBody;\r\n        let value = (item === body.firstElementChild)\r\n            ? 0\r\n            : (item === body.lastElementChild)\r\n                ? body.scrollHeight\r\n                : -1;\r\n\r\n        if (value > -1) {\r\n            body.scrollTop = value;\r\n            return;\r\n        }\r\n\r\n        let max = body.offsetHeight;\r\n        let top = item.offsetTop + (isGoingDown ? item.offsetHeight : 0);\r\n\r\n        if (top > (max + body.scrollTop)) {\r\n            body.scrollTop = (top + (isGoingDown ? item.offsetHeight * 0.2 : item.offsetHeight)) - max;\r\n            return;\r\n        }\r\n\r\n        let diff = top - body.scrollTop;\r\n        if (diff < 0)\r\n            body.scrollTop = top - (isGoingDown ? item.offsetHeight : item.offsetHeight * 0.2);\r\n    }\r\n\r\n    private _onWindowScrollOrResize() {\r\n        if (dom.isVisible(this._container))\r\n            this._updateContainerStyle();\r\n    }\r\n    private _onKeyDownEvent(e: KeyboardEvent) {\r\n        if (!dom.isVisible(this._container) || this._noRecords)\r\n            return;\r\n\r\n        if (e.key === \"Enter\" || e.key === \"Tab\") {\r\n            let active = this.$options.activeItemClass;\r\n            let item = this._containerBody.querySelector('.' + active);\r\n\r\n            if (!item) {\r\n                if (this._containerBody.children.length === 1)\r\n                    item = this._containerBody.firstElementChild;\r\n                else return;\r\n            }\r\n\r\n            if (item)\r\n                this._selectItem(item as HTMLElement);\r\n\r\n            if (e.key === \"Enter\")\r\n                e.preventDefault();\r\n\r\n            return;\r\n        }\r\n\r\n        this._keyboardNavigate(e);\r\n    }\r\n    private _onInputEvent(e: KeyboardEvent) {\r\n        let value = this.$element.value;\r\n        if (!e.isTrusted)\r\n            return;\r\n\r\n        if (value.length && value.length < (this.$options.minLength as number))\r\n            return;\r\n\r\n        this._sourceHandler(this.$options.source);\r\n        if (!value.length)\r\n            this._container.style.display = \"none\";\r\n    }\r\n    private _onBlurEvent() {\r\n        if (!this._container.matches(\":hover\"))\r\n            this._container.style.display = \"none\";\r\n    }\r\n\r\n    private _updateContainerStyle() {\r\n        let rect = this.$element.getBoundingClientRect();\r\n        this._container.style.minWidth = rect.width + 'px';\r\n        this._container.style.height = \"auto\";\r\n\r\n        let offsetY = this.$options.offsetY as number;\r\n        let offsetX = this.$options.offsetX as number;\r\n\r\n        let containerHeight = this._container.offsetHeight + offsetY;\r\n        let bottomSize = window.innerHeight - rect.bottom;\r\n        let maxSize = Math.max(rect.top, bottomSize);\r\n        let newContainerHeight = Math.min(containerHeight, maxSize);\r\n        if (newContainerHeight < containerHeight)\r\n            this._container.style.height = newContainerHeight + 'px';\r\n\r\n        let x = rect.left + offsetX\r\n        let y = bottomSize >= rect.top\r\n            ? rect.bottom + offsetY\r\n            : rect.top - this._container.offsetHeight - offsetY;\r\n\r\n        if (this._root) {\r\n            let rootRect = this._root.getBoundingClientRect();\r\n            x -= rootRect.left;\r\n            y -= rootRect.top;\r\n        }\r\n\r\n        this._container.style.top = y + 'px';\r\n        this._container.style.left = x + 'px';\r\n    }\r\n\r\n    private _registerContainerEvents() {\r\n        Array.from(this._containerBody.children).forEach(child => {\r\n            this.$addEvent(\"mouseenter\", this._onItemMouseEnterEvent, child);\r\n            this.$addEvent(\"click\", this._onItemClick, child);\r\n        });\r\n    }\r\n\r\n    private _onItemMouseEnterEvent(e: MouseEvent) {\r\n        let className = this.$options.activeItemClass as string;\r\n        let currentItem = ((e.target as Element).parentElement as Element).querySelector('.' + className) as HTMLElement;\r\n        if (currentItem)\r\n            dom.removeClass(currentItem, className);\r\n\r\n        dom.addClass(e.target as Element, className);\r\n    }\r\n\r\n    private _onItemClick(e: MouseEvent) {\r\n        this._selectItem(e.currentTarget as HTMLElement);\r\n    }\r\n\r\n    static from(selector: string, options: SearchBoxOptions): SearchBox[] {\r\n        return [...document.querySelectorAll(selector)].map(element => new SearchBox(<HTMLInputElement>element, options));\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import * as utils from '../utils';\r\nimport * as dom from '../dom';\r\nimport ControlBase, { ControlOptions } from './ControlBase';\r\nimport { CallbackArgs, ElementDimension } from '../base';\r\n\r\nexport interface LimiterOptions extends ControlOptions {\r\n    position?: string;\r\n    template?: string;\r\n    timeout?: number;\r\n    offsetX?: number;\r\n    offsetY?: number;\r\n    preserve?: boolean;\r\n    showOnFocus?: boolean;\r\n    root?: string;\r\n    onCreate?: CallbackArgs<Limiter, { tooltip: HTMLElement }>;\r\n    onShow?: CallbackArgs<Limiter, { tooltip: HTMLElement }>;\r\n    onHide?: CallbackArgs<Limiter, { tooltip: HTMLElement }>;\r\n    onChange?: CallbackArgs<Limiter, { tooltip: HTMLElement }>;\r\n}\r\n\r\ntype ElementPositionCalculation = {\r\n    x: (rect: ClientRect, size: ElementDimension) => number;\r\n    y: (rect: ClientRect, size: ElementDimension) => number;\r\n}\r\n\r\nclass Limiter extends ControlBase {\r\n    _position!: ElementPositionCalculation;\r\n    _templateContent!: string;\r\n    _tooltip!: HTMLElement | null;\r\n    _timer!: number | null;\r\n    _root!: Element | null;\r\n    $element!: HTMLInputElement | HTMLTextAreaElement;\r\n    $options!: LimiterOptions;\r\n\r\n    constructor(element: HTMLInputElement | HTMLTextAreaElement, options: LimiterOptions) {\r\n        let defaultOptions = {\r\n            position: \"right bottom\",\r\n            template: \"<small><em>${len} / ${max}</em></small>\",\r\n            timeout: 1.5,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            preserve: false,\r\n            showOnFocus: false\r\n        }\r\n\r\n        super(element, utils.merge(defaultOptions, options));\r\n    }\r\n\r\n    $initialize() {\r\n        this._setRoot();\r\n        this._registerEvents();\r\n        this._configPosition();\r\n        this._timer = null;\r\n    }\r\n\r\n    dispose() {\r\n        if (this._tooltip)\r\n            this._destroy();\r\n\r\n        window.removeEventListener(\"scroll\", this._onWindowScrollOrResize, false);\r\n        super.dispose();\r\n    }\r\n\r\n    private _setRoot() {\r\n        if (this.$options.root)\r\n            this._root = document.querySelector(this.$options.root);\r\n    }\r\n\r\n    private _destroy() {\r\n        if (this._tooltip && this._tooltip.parentNode)\r\n            this._tooltip.parentNode.removeChild(this._tooltip);\r\n\r\n        this._tooltip = null;\r\n    }\r\n\r\n    private _getTooltip(onFocus?: boolean) {\r\n        let visible = this._tooltip && dom.isVisible(this._tooltip);\r\n\r\n        if (!this._tooltip) {\r\n            this.$element.insertAdjacentHTML(\"afterend\", this.$options.template as string);\r\n            this._tooltip = this.$element.nextElementSibling as HTMLElement;\r\n            this._templateContent = this._tooltip.innerHTML;\r\n            this._tooltip.style.position = \"fixed\";\r\n            let rect = this.$element.getBoundingClientRect();\r\n            this._tooltip.style.left = rect.left + 'px'; // set initial position\r\n            this.$invoke(this.$options.onCreate, this, { tooltip: this._tooltip });\r\n            this._tooltip.style.display = \"none\";\r\n        }\r\n\r\n        if (!visible) {\r\n            if (onFocus && !this.$options.showOnFocus)\r\n                return this._tooltip;\r\n\r\n            this.$invoke(this.$options.onShow, this, { tooltip: this._tooltip });\r\n            this._tooltip.style.display = \"\";\r\n        }\r\n\r\n        return this._tooltip;\r\n    }\r\n\r\n    private _registerEvents() {\r\n        this.$addEvent(\"focus\", this._onFocusEvent);\r\n        this.$addEvent(\"input\", this._onInputEvent);\r\n        this.$addEvent(\"blur\", this._onBlurEvent);\r\n        this.$addEvent(\"scroll\", this._onWindowScrollOrResize, window);\r\n        this.$addEvent(\"resize\", this._onWindowScrollOrResize, window);\r\n    }\r\n\r\n    private _onWindowScrollOrResize() {\r\n        if (this._tooltip && dom.isVisible(this._tooltip))\r\n            this._updatePosition();\r\n    }\r\n\r\n    private _onFocusEvent(e: FocusEvent) {\r\n        if (!this.$options.showOnFocus)\r\n            return;\r\n\r\n        this._onInputEvent();\r\n    }\r\n\r\n    private _onInputEvent() {\r\n        let tooltip = this._getTooltip(true);\r\n        let data = {\r\n            len: this.$element.value.length,\r\n            max: this.$element.maxLength,\r\n            rem: 0\r\n        }\r\n\r\n        data.rem = data.max - data.len;\r\n        tooltip.innerHTML = utils.template(this._templateContent, data);\r\n\r\n        this._updatePosition();\r\n        window.clearTimeout(this._timer || 0);\r\n        this._timer = window.setTimeout(() => this._onBlurEvent(), (this.$options.timeout as number) * 1000);\r\n    }\r\n\r\n    private _onBlurEvent() {\r\n        if (!this._tooltip || this._tooltip.style.display === \"none\")\r\n            return;\r\n\r\n        if (!this.$options.preserve)\r\n            this._destroy.call(this);\r\n        else\r\n            this._tooltip.style.display = \"none\";\r\n\r\n        this.$invoke(this.$options.onHide, this, { tooltip: this._tooltip });\r\n    }\r\n\r\n    private _updatePosition() {\r\n        let tooltip = this._getTooltip();\r\n        let rect = this.$element.getBoundingClientRect();\r\n        let position = this.$options.position as string;\r\n\r\n        let size = dom.getSize(tooltip);\r\n\r\n        let x = this._position.x(rect, size);\r\n        let y = this._position.y(rect, size);\r\n\r\n        x += this.$options.offsetX as number;\r\n        y += this.$options.offsetY as number;\r\n\r\n        if (this._root) {\r\n            let rootRect = this._root.getBoundingClientRect();\r\n            y -= rootRect.top;\r\n            x -= rootRect.left;\r\n        }\r\n\r\n        tooltip.style.left = `${x}px`;\r\n        tooltip.style.top = `${y}px`;\r\n\r\n        this.$invoke(this.$options.onChange, this, { tooltip: this._tooltip });\r\n    }\r\n\r\n    private _configPosition() {\r\n        let pattern: { [key: string]: (rect: ClientRect, size: ElementDimension) => number } = {\r\n            left: (rect, size) => rect.left,\r\n            right: (rect, size) => rect.right - size.width,\r\n            top: (rect, size) => rect.top - size.height,\r\n            bottom: (rect, size) => rect.bottom\r\n        }\r\n\r\n        let position = this.$options.position as string;\r\n        this._position = {} as ElementPositionCalculation;\r\n        let matches = position.match(/(^| )(left|right)( |$)/);\r\n        if (matches)\r\n            this._position.x = pattern[matches[2]];\r\n\r\n        matches = position.match(/(^| )(top|bottom)( |$)/);\r\n        if (matches)\r\n            this._position.y = pattern[matches[2]];\r\n    }\r\n\r\n    static from(selector: string, options: LimiterOptions): Limiter[] {\r\n        return [...document.querySelectorAll(selector)].map(element => new Limiter(<HTMLInputElement | HTMLTextAreaElement>element, options));\r\n    }\r\n}\r\n\r\nexport default Limiter;","import * as utils from '../utils';\r\nimport ControlBase, { ControlOptions } from './ControlBase';\r\nimport { CaretPosition, CallbackArgs } from '../base';\r\n\r\ntype MaskEditTranslation = {\r\n    test: RegExp | { (value: string): boolean };\r\n    transform?: (value: string) => string;\r\n}\r\n\r\nexport interface MaskEditOptions extends ControlOptions {\r\n    format: string;\r\n    placeholder?: string;\r\n    allowPartial?: boolean;\r\n    shifter?: string;\r\n    translation?: { [key: string]: MaskEditTranslation };\r\n    onUpdate?: CallbackArgs<MaskEdit, { value: string, rawValue: string }>;\r\n}\r\n\r\nclass MaskEdit extends ControlBase {\r\n    _maskWithShifter!: string;\r\n    _originalMaxLength!: number;\r\n    _currentFormat!: string;\r\n    _translations!: { [key: string]: { test: (value: string) => boolean, transform?: (value: string) => string } };\r\n    _formats!: string[];\r\n\r\n    $element!: HTMLInputElement;\r\n    $options!: MaskEditOptions;\r\n\r\n    constructor(element: HTMLInputElement, options: MaskEditOptions) {\r\n        let defaultOptions: MaskEditOptions = {\r\n            format: \"\",\r\n            placeholder: \"\",\r\n            allowPartial: false,\r\n            shifter: '_',\r\n            translation: {\r\n                '9': { test: /[0-9]/ },\r\n                'a': { test: /[A-Za-z]/ },\r\n                'A': { test: /[A-Za-z]/, transform: n => n.toUpperCase() }\r\n            }\r\n        }\r\n\r\n        super(element, utils.merge(defaultOptions, options));\r\n    }\r\n\r\n    update(): void {\r\n        let value = this.$element.value;\r\n        let buffer = [];\r\n        for (let i = 0, j = 0; i < this._currentFormat.length; i++) {\r\n            let result = this._applyMask(i, j, value);\r\n            if (result.arg !== undefined)\r\n                buffer.push(result.value);\r\n\r\n            if (result.ok)\r\n                j++;\r\n            else if (!result.keepRunning || value[j] === undefined)\r\n                break;\r\n        }\r\n\r\n        this._setValue(buffer.join(''));\r\n    }\r\n\r\n    getRawValue() {\r\n        let buffer = [];\r\n        let value = this.$element.value;\r\n        for (let i = 0; i < value.length; i++) {\r\n            if (this._hasTranslation(i) && value[i] !== this.$options.shifter)\r\n                buffer.push(value[i]);\r\n        }\r\n        return buffer.join('');\r\n    }\r\n\r\n    setOptions(options: MaskEditOptions) {\r\n        this._setOptionsInternal(options);\r\n        this._onBlurEvent();\r\n    }\r\n\r\n    dispose() {\r\n        if (this._originalMaxLength === -1)\r\n            this.$element.removeAttribute(\"maxlength\");\r\n        else\r\n            this.$element.maxLength = this._originalMaxLength;\r\n\r\n        super.dispose();\r\n    }\r\n\r\n    $initialize() {\r\n        this._setOptionsInternal(null);\r\n        this._defineFormat(true);\r\n        this._registerEvents();\r\n        this.update();\r\n    }\r\n\r\n    private _setOptionsInternal(options: MaskEditOptions | null): void {\r\n        utils.merge(this.$options, options);\r\n        this._configOptions();\r\n        this._defineFormat(true);\r\n        this._normalizeTranslations();\r\n\r\n        this.$element.value = this.getRawValue();\r\n        this.update();\r\n    }\r\n\r\n    private _applyMask(i: number, j: number, value: string) {\r\n        let v = value[j];\r\n        let f = this._currentFormat[i];\r\n        let t = this._translations[f];\r\n\r\n        let result = {\r\n            isMask: !t && f !== undefined,\r\n            arg: v,\r\n            ok: (!!t && t.test(v || '')) || f === v,\r\n            keepRunning: !t && i < this._currentFormat.length,\r\n            value: ''\r\n        };\r\n\r\n        if (result.ok)\r\n            result.value = (t && t.transform ? t.transform : (arg: string) => arg)(v || '');\r\n        else\r\n            result.value = t ? '' : f;\r\n\r\n        return result;\r\n    }\r\n\r\n    private _replace(e: KeyboardEvent) {\r\n        e.preventDefault();\r\n\r\n        let index = this.$element.selectionStart || 0;\r\n        let buffer = this.$element.value.split('');\r\n        buffer[index] = e.key;\r\n\r\n        let value = buffer.join('');\r\n        for (let i = index; i < this._currentFormat.length; i++) {\r\n            let result = this._applyMask(i, index, value);\r\n            if (result.ok) {\r\n                buffer[i] = result.value;\r\n                index = i;\r\n                break;\r\n            } else if (result.isMask) {\r\n                buffer[i] = result.value;\r\n            } else {\r\n                buffer[i] = this.$element.value[i];\r\n                break;\r\n            }\r\n\r\n            if (!result.keepRunning || buffer[i] === undefined)\r\n                break;\r\n        }\r\n\r\n        this._setValue(buffer.join(''));\r\n        this._setCaretPosition(index + 1);\r\n    }\r\n\r\n    private _hasTranslation(index: number): boolean {\r\n        let f = this._currentFormat[index];\r\n        return !!this._translations[f];\r\n    }\r\n\r\n    private _defineFormat(initialization: boolean) {\r\n        if (initialization)\r\n            this._currentFormat = this._formats[0];\r\n\r\n        if (!this._originalMaxLength)\r\n            this._originalMaxLength = this.$element.maxLength;\r\n\r\n        this.$element.maxLength = this._currentFormat.length;\r\n    }\r\n\r\n    private _configOptions() {\r\n        this._formats = utils.isString(this.$options.format)\r\n            ? [this.$options.format]\r\n            : [].concat(this.$options.format);\r\n\r\n        this.$element.placeholder = this.$options.placeholder || this._formats[0];\r\n    }\r\n\r\n    private _normalizeTranslations() {\r\n        this._translations = {};\r\n        let translation = this.$options.translation || {};\r\n        for (let t in translation) {\r\n            let testFn = translation[t].test;\r\n            this._translations[t] = {\r\n                test: testFn instanceof RegExp ? (value) => (testFn as RegExp).test(value) : testFn,\r\n                transform: translation[t].transform\r\n            }\r\n        }\r\n    }\r\n\r\n    private _registerEvents() {\r\n        this.$addEvent(\"input\", this._onInputEvent);\r\n        this.$addEvent(\"keydown\", this._onKeyDownEvent);\r\n        this.$addEvent(\"blur\", this._onBlurEvent);\r\n    }\r\n\r\n    private _onBlurEvent() {\r\n        let value = this.$element.value;\r\n        let hasShifter = value.indexOf(this.$options.shifter as string) >= 0;\r\n        if (hasShifter) {\r\n            if (this.$options.allowPartial) {\r\n                value = value.replace(new RegExp(`\\\\${this.$options.shifter}*$`, ''), '');\r\n                if (value.indexOf(this.$options.shifter as string) === -1) {\r\n                    this._setValue(value);\r\n                    return;\r\n                }\r\n            }\r\n\r\n            this._setValue('');\r\n            return;\r\n        }\r\n\r\n        if (value.length === this._currentFormat.length)\r\n            return;\r\n\r\n        if (!this.$options.allowPartial)\r\n            this._setValue('');\r\n    }\r\n\r\n    private _onInputEvent() {\r\n        this.update();\r\n    }\r\n\r\n    private _onKeyDownEvent(e: KeyboardEvent) {\r\n\r\n        if (/^[cvx]$/i.test(e.key) && e.ctrlKey)\r\n            return;\r\n\r\n        let caret = this._getCaretPosition();\r\n        if (e.key.length === 1) {\r\n            if (this.$element.value[caret.start])\r\n                this._replace(e);\r\n            return;\r\n        }\r\n\r\n        if (e.key === \"Backspace\") {\r\n            this._backspaceHandler.call(this, e, caret);\r\n            return;\r\n        }\r\n\r\n        if (e.key === \"Delete\") {\r\n            this._deleteHandler.call(this, e, caret);\r\n            return;\r\n        }\r\n    }\r\n\r\n    private _getMaskWithShifter(): string {\r\n        if (this._maskWithShifter)\r\n            return this._maskWithShifter;\r\n\r\n        let buffer = this._currentFormat.split('');\r\n        for (let i = 0; i < buffer.length; i++) {\r\n            if (this._hasTranslation(i))\r\n                buffer[i] = this.$options.shifter as string;\r\n        }\r\n        return (this._maskWithShifter = buffer.join(''));\r\n    }\r\n\r\n    private _default(caret: CaretPosition): boolean {\r\n        if (!this.$element.value.length)\r\n            return true;\r\n\r\n        if (!caret.areEquals) {\r\n            if (caret.start === 0 && caret.end === this.$element.value.length)\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private _deleteHandler(e: KeyboardEvent, caret: CaretPosition) {\r\n\r\n        if (this._default(caret))\r\n            return;\r\n\r\n        e.preventDefault();\r\n\r\n        do {\r\n            caret.end++;\r\n        } while (!this._hasTranslation(caret.end - 1) && caret.end < this._currentFormat.length);\r\n\r\n        let buffer = this.$element.value.split('');\r\n        let value = this._getMaskWithShifter().substring(caret.start, caret.end);\r\n        buffer.splice.apply(buffer, [caret.start, caret.end - caret.start].concat(value.split('') as any[]));\r\n        this._setValue(buffer.join(''));\r\n        this._setCaretPosition(caret.start, caret.end);\r\n    }\r\n\r\n    private _backspaceHandler(e: KeyboardEvent, caret: CaretPosition) {\r\n        if (this._default(caret))\r\n            return;\r\n\r\n        e.preventDefault();\r\n        if (caret.areEquals) {\r\n            do {\r\n                caret.start = Math.max(caret.start - 1, 0);\r\n            } while (!this._hasTranslation(caret.start) && caret.start > 0);\r\n        }\r\n\r\n        let buffer = this.$element.value.split('');\r\n        if (caret.end === this.$element.value.length) {\r\n            buffer.splice(caret.start);\r\n        } else {\r\n            let value = this._getMaskWithShifter().substring(caret.start, caret.end);\r\n            buffer.splice.apply(buffer, [caret.start, caret.end - caret.start].concat(value.split('') as any[]));\r\n        }\r\n\r\n        this._setValue(buffer.join(''));\r\n        this._setCaretPosition(caret.start);\r\n    }\r\n\r\n\r\n    private _setCaretPosition(start: number, end: number | undefined = undefined) {\r\n        this.$element.selectionStart = start;\r\n        this.$element.selectionEnd = end || start;\r\n    }\r\n\r\n    private _getCaretPosition(): CaretPosition {\r\n        let start = this.$element.selectionStart || 0;\r\n        let end = this.$element.selectionEnd || 0;\r\n        return {\r\n            start,\r\n            end,\r\n            areEquals: start === end\r\n        }\r\n    }\r\n\r\n    private _setValue(value: string) {\r\n        this.$element.value = value;\r\n        this.$invoke(this.$options.onUpdate, this, { value, rawValue: this.getRawValue() });\r\n    }\r\n\r\n    static from(selector: string, options: MaskEditOptions): MaskEdit[] {\r\n        return [...document.querySelectorAll(selector)].map(element => new MaskEdit(<HTMLInputElement>element, options));\r\n    }\r\n}\r\n\r\nexport default MaskEdit;","import { version } from './base';\r\nimport * as utils from './utils';\r\nimport * as dom from './dom';\r\nimport * as http from './http';\r\nimport NumericBox from './ui/NumericBox';\r\nimport SearchBox from './ui/SearchBox';\r\nimport Limiter from './ui/Limiter';\r\nimport MaskEdit from './ui/MaskEdit';\r\n\r\nlet _duna = {};\r\n\r\nObject.defineProperty(_duna, \"ui\", {\r\n    get() {\r\n        return {\r\n            NumericBox,\r\n            SearchBox,\r\n            Limiter,\r\n            MaskEdit\r\n        }\r\n    }\r\n});\r\n\r\nObject.defineProperty(_duna, \"http\", { get() { return http; } })\r\nObject.defineProperty(_duna, \"dom\", { get() { return dom; } })\r\nObject.defineProperty(_duna, \"utils\", { get() { return utils; } })\r\nObject.defineProperty(_duna, \"version\", { get() { return version; } })\r\n\r\nexport default _duna;","export const version = \"1.0.4\";\r\n\r\nexport type Callback<T> = (sender: T) => void;\r\n\r\nexport type CallbackArgs<TSender, TArgs> = (sender: TSender, args: TArgs) => void;\r\n\r\nexport type CaretPosition = {\r\n    start: number,\r\n    end: number,\r\n    areEquals: boolean\r\n}\r\n\r\nexport interface ElementDimension {\r\n    width: number,\r\n    height: number\r\n}\r\n\r\nexport type Converter<TFrom, TTo> = (value: TFrom) => TTo;\r\n"],"names":["merge","target","_i","sources","forEach","source","p","hasOwnProperty","isDefined","constructor","Object","value","isJsonLike","m","match","[","{","test","isFunction","isString","isObject","isNumber","isNaN","isFinite","template","format","data","prefix","suffix","regex","RegExp","toString","replace","expr","key","toQuery","obj","keyEncoding","valueEncoding","v","encodeURIComponent","query","Array","isArray","item","push","join","fromQuery","decodeURIComponent","toLowerCase","split","reduce","previous","current","titleCase","toUpperCase","slice","noDiacritics","patterns","A","a","E","e","I","i","O","o","U","u","N","n","C","c","getSize","element","hidden","style","display","result","width","offsetWidth","height","offsetHeight","isVisible","addClass","className","classes","concat","indexOf","filter","name","removeClass","names","length","removeAttribute","setStyle","styles","getStyle","document","defaultView","getComputedStyle","getPropertyValue","removeChildren","lastChild","removeChild","startRequest","method","url","options","Promise","done","error","xhr","XMLHttpRequest","withCredentials","open","user","password","headers","setRequestHeader","onload","optionsResponseConverter","response","responseConverter","utils.isFunction","responseHeader","getResponseHeader","utils.isJsonLike","responseText","JSON","parse","responseXML","contentType","status","statusText","utils.isObject","stringify","send","init","defaultHeaders","Accept","Content-Type","json","normalizedHeaders","utils.titleCase","crossDomain","assign","getHeaders","index","utils.fromQuery","jsonValue","utils.toQuery","get","this","$element","$options","$guid","Math","random","substr","_eventsCollection","$initialize","$invoke","onReady","$registerControl","ControlBase","prop","console","log","removeEventListener","type","handler","findIndex","_this","prototype","instance","splice","dispose","_ensureUniqueInstancePerType","callback","args","apply","undefined","bind","addEventListener","_super","utils.merge","scale","decimalSeparator","groupingSeparator","placeholder","nullable","tslib_1.__extends","NumericBox","_normalizeFormat","_registerEvents","text","getRawValue","ev","parseFloat","utils.isNumber","_ensureRange","min","max","ns","toFixed","formatted","f","_dataFormat","onFormat","matches","unshift","len","separator","utils.isString","$addEvent","_onFocusEvent","_onKeyDownEvent","_onChangeEvent","el","shiftKey","selectionStart","getSelection","preventDefault","blur","hasAttribute","select","inputValue","onChange","hasMin","hasMax","RangeError","selector","tslib_1.__spread","querySelectorAll","map","Error","activeItemClass","delay","matchesTemplate","fieldTemplate","maxResults","minLength","offsetX","offsetY","dataRoot","noRecordsTemplate","searchFields","SearchBox","_setRoot","_createTemplate","_defineSourceHandler","root","_root","querySelector","insertAdjacentHTML","container","nextElementSibling","zIndex","parseInt","dom.getStyle","dom.setStyle","position","margin","overflowY","_container","_containerBody","parentElement","_itemTemplate","outerHTML","_noRecords","_resetContainerBody","_updateContainerStyle","dataSource","_defineDataFilter","items","_dataFilter","fields","_searchFields","search","_render","_renderNoRecords","property","trim","_promiseSourceHandler","http.get","promise","window","clearTimeout","_timer","setTimeout","onBeforeRequest","then","_readData","onAfterRequest","_staticSourceHandler","utils.isDefined","from","children","child","$removeEvent","_onItemMouseEnterEvent","_onItemClick","dom.removeChildren","rawValue","utils.noDiacritics","content","this_1","field","fieldValue","_normalizeValue","strIndex","utils.template","lastElementChild","img","getAttribute","src","_registerContainerEvents","onResultsRender","_stringDataFilter","_objectDataFilter","keys","0","raw","_sourceHandler","_httpSourceHandler","onItemSelected","innerText","dispatchEvent","Event","bubbles","_onInputEvent","_onBlurEvent","_onWindowScrollOrResize","isGoingDown","active","action","dom.removeClass","dom.addClass","onActiveItem","_updateContainerScrollPosition","body","firstElementChild","scrollHeight","scrollTop","top","offsetTop","dom.isVisible","_selectItem","_keyboardNavigate","isTrusted","rect","getBoundingClientRect","minWidth","containerHeight","bottomSize","innerHeight","bottom","maxSize","newContainerHeight","x","left","y","rootRect","currentItem","currentTarget","timeout","preserve","showOnFocus","Limiter","_configPosition","_tooltip","_destroy","parentNode","onFocus","visible","_templateContent","innerHTML","onCreate","tooltip","onShow","_updatePosition","_getTooltip","maxLength","rem","call","onHide","size","dom.getSize","_position","pattern","right","allowPartial","shifter","translation","9","transform","MaskEdit","buffer","j","_currentFormat","_applyMask","arg","ok","keepRunning","_setValue","_hasTranslation","_setOptionsInternal","_originalMaxLength","_defineFormat","update","_configOptions","_normalizeTranslations","t","_translations","isMask","_setCaretPosition","initialization","_formats","testFn","ctrlKey","caret","_getCaretPosition","_deleteHandler","_backspaceHandler","start","_replace","_maskWithShifter","areEquals","end","_default","_getMaskWithShifter","substring","selectionEnd","onUpdate","_duna","defineProperty","http","dom","utils"],"mappings":"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"}